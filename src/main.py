from aiogram import executor, Dispatcher

async def send_update(users, bot):
    for user in users:
        # await bot.send_message()
        pass


if __name__ == '__main__':
    import config
    import handlers
    
    async def on_startup(dispatcher: Dispatcher, *args, **kwargs):
        bot = dispatcher.bot
        send_id = "sent1"
        sent = config.database.ref.get().get("sent1")
        # test_users = [str(config.ADMIN_ID)]
        users = config.database.get_all_users().keys()
        if not sent:
            for user in users:
                try:
                    await bot.send_message(user, 
                        f"<b>–ü—Ä–∏–≤–µ—Ç –ø–æ–¥–ø–∏—á–Ω–∏–∫–∏!</b>\n\n"
                        f"–ù–µ –∑–Ω–∞—é –ø–æ–ª—å–∑—É–µ—Ç–µ—Å—å –≤—ã –µ—â–µ —ç—Ç–∏–º –±–æ—Ç–æ–º –∏–ª–∏ –Ω–µ—Ç, –Ω–æ —è —Å–¥–µ–ª–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ!\n\n"
                        f"–¢–µ–ø–µ—Ä—å –ø–æ –∫–æ–º–∞–Ω–¥–µ /date –≤—ã–ª–∞–∑–∏—Ç –∫–∞–ª–µ–Ω–¥–∞—Ä–∏–∫, –≥–¥–µ –º–æ–∂–Ω–æ –Ω–∞—Ç—ã–∫–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –ª—é–±–æ–π –¥–µ–Ω—å üéâ\n\n"
                        f"–ù–∞ —ç—Ç–æ–º –ø–æ–∫–∞ —á—Ç–æ –≤—Å—ë)"
                        f"\n–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∫–∞–∫–∏–µ-—Ç–æ –µ—â–µ —Ñ–∏—á–∏, –º–æ–∂–µ—Ç–µ –ø–∏—Å–∞—Ç—å <a href='https://t.me/crawlic'>–º–Ω–µ.</a>",
                        disable_web_page_preview=True
                        )
                except Exception as _:
                    continue
        config.database.ref.child(send_id).set(True)

    executor.start_polling(config.dp, skip_updates=True, on_startup=on_startup)
